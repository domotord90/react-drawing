{"version":3,"sources":["App.js","index.js"],"names":["App","canvasRef","useRef","useState","x","y","mouse","setMouse","isPainting","setIsPainting","color","setColor","lineWidth","setLineWidth","isEraserOn","setIsEraserOn","startPaint","useCallback","e","coordinates","getCoordinates","useEffect","current","canvas","addEventListener","removeEventListener","paint","newMouse","drawLine","originalMouse","context","getContext","strokeStyle","lineJoin","beginPath","moveTo","lineTo","closePath","stroke","exitPaint","pageX","offsetLeft","pageY","offsetTop","className","style","backgroundColor","onChange","target","value","type","console","log","parseInt","icon","faEraser","onClick","faTrashAlt","clearRect","offsetWidth","offsetHeight","link","document","createElement","download","href","toDataURL","click","faSave","ref","width","height","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9fc328fe.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\n\r\nimport \"./App.css\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faEraser,\r\n  faTrashAlt,\r\n  faSave\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst App = () => {\r\n  const canvasRef = useRef(null);\r\n  const [mouse, setMouse] = useState({ x: 0, y: 0 });\r\n  const [isPainting, setIsPainting] = useState(false);\r\n  const [color, setColor] = useState(\"#000000\");\r\n  const [lineWidth, setLineWidth] = useState(5);\r\n  const [isEraserOn, setIsEraserOn] = useState(false);\r\n\r\n  const startPaint = useCallback(e => {\r\n    const coordinates = getCoordinates(e);\r\n    if (coordinates) {\r\n      setIsPainting(true);\r\n      setMouse(coordinates);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!canvasRef.current) {\r\n      return;\r\n    }\r\n    const canvas = canvasRef.current;\r\n\r\n    canvas.addEventListener(\"mousedown\", startPaint);\r\n    return () => {\r\n      canvas.removeEventListener(\"mousedown\", startPaint);\r\n    };\r\n  }, [startPaint]);\r\n\r\n  const paint = useCallback(\r\n    e => {\r\n      if (isPainting) {\r\n        const newMouse = getCoordinates(e);\r\n        if (mouse && newMouse) {\r\n          drawLine(mouse, newMouse);\r\n          setMouse(newMouse);\r\n        }\r\n      }\r\n    },\r\n    [isPainting, mouse]\r\n  );\r\n\r\n  const drawLine = (originalMouse, newMouse) => {\r\n    if (!canvasRef.current) {\r\n      return;\r\n    }\r\n    const canvas = canvasRef.current;\r\n    const context = canvas.getContext(\"2d\");\r\n    if (context) {\r\n      context.strokeStyle = color;\r\n      context.lineJoin = \"round\";\r\n      context.lineWidth = lineWidth;\r\n\r\n      context.beginPath();\r\n      context.moveTo(originalMouse.x, originalMouse.y);\r\n      context.lineTo(newMouse.x, newMouse.y);\r\n      context.closePath();\r\n\r\n      context.stroke();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!canvasRef.current) {\r\n      return;\r\n    }\r\n    const canvas = canvasRef.current;\r\n    canvas.addEventListener(\"mousemove\", paint);\r\n    return () => {\r\n      canvas.removeEventListener(\"mousemove\", paint);\r\n    };\r\n  }, [paint]);\r\n\r\n  const exitPaint = useCallback(() => {\r\n    setIsPainting(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!canvasRef.current) {\r\n      return;\r\n    }\r\n    const canvas = canvasRef.current;\r\n    canvas.addEventListener(\"mouseup\", exitPaint);\r\n    canvas.addEventListener(\"mouseleave\", exitPaint);\r\n    return () => {\r\n      canvas.removeEventListener(\"mouseup\", exitPaint);\r\n      canvas.removeEventListener(\"mouseleave\", exitPaint);\r\n    };\r\n  }, [exitPaint]);\r\n\r\n  const getCoordinates = e => {\r\n    if (!canvasRef.current) {\r\n      return;\r\n    }\r\n\r\n    const canvas = canvasRef.current;\r\n    return { x: e.pageX - canvas.offsetLeft, y: e.pageY - canvas.offsetTop };\r\n  };\r\n\r\n  const colorOnChange = e => {\r\n    if (isEraserOn) {\r\n      setIsEraserOn(false);\r\n    }\r\n    setColor(e.target.value);\r\n  };\r\n\r\n  const lineWidthOnChange = e => {\r\n    const { value } = e.target;\r\n    console.log(value);\r\n    setLineWidth(parseInt(value, 10));\r\n  };\r\n\r\n  const eraserOnClick = () => {\r\n    setColor(\"#ffffff\");\r\n    setIsEraserOn(true);\r\n  };\r\n\r\n  const clearOnClick = () => {\r\n    const context = canvasRef.current.getContext(\"2d\");\r\n\r\n    context.clearRect(\r\n      0,\r\n      0,\r\n      canvasRef.current.offsetWidth,\r\n      canvasRef.current.offsetHeight\r\n    );\r\n  };\r\n\r\n  const saveAsImageOnClick = () => {\r\n    const link = document.createElement(\"a\");\r\n    link.download = \"image.jpeg\";\r\n    link.href = canvasRef.current.toDataURL();\r\n    link.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <div className=\"tools\">\r\n        <label\r\n          style={{ backgroundColor: color }}\r\n          className=\"color-picker-label\"\r\n        >\r\n          <input\r\n            className=\"color-picker\"\r\n            onChange={colorOnChange}\r\n            type=\"color\"\r\n            value={color}\r\n          />\r\n        </label>\r\n        <div className=\"stroke-width-container\">\r\n          <label>Stroke</label>\r\n          <select\r\n            className=\"stroke-width\"\r\n            onChange={lineWidthOnChange}\r\n            value={lineWidth}\r\n          >\r\n            <option value={1}>1</option>\r\n            <option value={5}>5</option>\r\n            <option value={10}>10</option>\r\n            <option value={20}>20</option>\r\n          </select>\r\n        </div>\r\n        <FontAwesomeIcon\r\n          icon={faEraser}\r\n          onClick={eraserOnClick}\r\n          className=\"eraser-button\"\r\n        />\r\n        <FontAwesomeIcon\r\n          icon={faTrashAlt}\r\n          onClick={clearOnClick}\r\n          className=\"clear\"\r\n        />\r\n        <FontAwesomeIcon\r\n          className=\"save\"\r\n          onClick={saveAsImageOnClick}\r\n          icon={faSave}\r\n        />\r\n      </div>\r\n      <canvas\r\n        className={`canvas ${isEraserOn ? \"eraser\" : \"pencil\"}`}\r\n        ref={canvasRef}\r\n        width={\"1920px\"}\r\n        height={\"1080px\"}\r\n      ></canvas>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}